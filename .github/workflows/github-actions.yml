name: github action # Name of the workflow

on: # Defines what will trigger the workflow
  push: # This will run the action whenever you push to the repo
    branches: # Makes sure the workflow runs whenever something is pushed to certain branches
      - master

env:  # Workflow-wide variables
  PROJECT_ID: ae-terraform-2025
  REGION: europe-west4
  REPO_NAME: ae-2025-registry
  IMAGE_NAME: ad-image

jobs: # What should the workflow do?
  ci: # Name of the workflow
    runs-on: ubuntu-latest 
    steps:
      # Step 1: Print random message
      - name: hello-world
        run: echo "Hello world"

      # Step 2: Clone the repository  
      - name: checkout-repository
        uses: actions/checkout@v3

      # # Step 3: Build the docker image
      # - name: docker-build
      #   run: docker build -t roman-api .
      #   run: docker build -t ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:latest .

      # # Step 4: Tag the docker image
      # - name: docker-tag
      #   run: docker tag roman-api europe-west4-docker.pkg.dev/ae-terraform-2025/ae-2025-registry/ad-image:latest

      # Step 4: Authenticate with service account key
      - name: gcp-authenticate
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'        

      # Step 5: Authenticate to configure docker
      - name: configure-docker
        run: |
          echo "Configuring docker"
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet        

      # Step 6: Build and Push the docker image
      - name: docker-build-n-push
        env: 
          IMAGE: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:latest
        run: |
          echo "Building image: $IMAGE"
          docker build -t $IMAGE .
          docker push $IMAGE


