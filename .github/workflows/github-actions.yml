name: github action # Name of the workflow

on: # Defines what will trigger the workflow
  push: # This will run the action whenever you push to the repo
    branches: # Makes sure the workflow runs whenever something is pushed to certain branches
      - master

env:  # Workflow-wide variables
  PROJECT_ID: ae-terraform-2025
  REGION: europe-west4
  REPO_NAME: ae-2025-registry
  IMAGE_NAME: ad-image

jobs: # What should the workflow do?
  ci: # Name of the workflow
    runs-on: ubuntu-latest 
    steps:
      # Step 1: Clone the repository
      - name: Repository checkout
        uses: actions/checkout@v3

      # Step 2: Install dependencies
      - name: Install dependencies
        run: |
          echo "Installing dependencies"
          pip install .[ci]

      # Step 3: Conventional commit check
      - name: Conventional commit check
        run: |
          echo "Checking for conventional commit"
          cz check --message "$(git log -1 --pretty=%B)"

      # Step 4: Run Python formatting (black)
      - name: Run Python formatting (black)
        run: |
          echo "Running black..."
          black --check --diff --color .

      # Step 5: Run Python linting (ruff)
      - name: Run Python linting (ruff)
        run: |
          echo "Running ruff..."
          ruff check .

      # Step 6: Testing
      - name: Run tests
        run: |
          echo "Running tests from test.py"
          pytest -v

      # Step 7: Authenticate with service account key
      - name: GCP authentication
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'        

      # Step 8: Authenticate to configure docker
      - name: Docker configuration
        run: |
          echo "Configuring docker"
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet        

      # Step 9: Build and push the docker image
      - name: Docker Build and Push
        env: 
          IMAGE: ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.IMAGE_NAME }}:latest
        run: |
          echo "Building image: $IMAGE"
          docker build -t $IMAGE .
          echo "Pusing image: $IMAGE"
          docker push $IMAGE

      # Step 10: Setting up Terraform
      - name: Terraform setup
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.2  # <-- match the version you want

      # Step 11: Initializing, planning and applying Terrafrom
      - name: Terraform init, plan, and apply
        working-directory: ./
        run: |
          echo "Initializing Terraform"
          terraform init
          echo "Planning Terraform"
          terraform plan -var "db_password=${{ secrets.DB_PASSWORD }}" 
          echo "Applying Terraform"
          terraform apply -auto-approve -var "db_password=${{ secrets.DB_PASSWORD }}"

